%%
% This script plots the 3D isosurface of the velocity model, with specified netCDF file name.
% It also makes a movie through rotating the camera position and saves it
% to mp4 format.
%
% Prepared by Xiaotao Yang 
% Contact: stcyang@gmail.com
%
% Reference:
% Yang, X., H. Gao (in revision). Seismic imaging of slab segmentation and 
% correlation with volcano distribution along the Aleutian-Alaska subduction zone, 
% Nature Communications

%plot isosurface
close all;

%% load master data
load AlaskaBorder;
state=[]; state(1).polygon(:,1)=Alaska.lon;state(1).polygon(:,2)=Alaska.lat;

%%
vmodelfile='YangAndGao_AKFWANT_Vs2019_modeldata_forpaper.nc';
vtag='vs'; %velocity tag to read in the *.nc model file. 
% check the variables using ncinfo in MATLAB.
[y,x,z,mvs]=read_netCDF_model3d(vmodelfile,vtag);
%%
% maparea.lon=[-161,-136.5]; % temporary 
% maparea.lat=[56, 66.8];
AKvolcanoes=load('AKvolclatlong_ready_matlab.txt');
quakes=load('AK_quakes_1970_gt4.5_NEIC_matlab.txt');
%%
vplot_all=smooth3(mvs/1000,'box',[13 25 1]); %

%%
amask=nan(length(squeeze(XSIM(:,1,1))),length(squeeze(YSIM(1,:,1))));
load('AlaskaRayCoverOutline_ite_0.05deg_05_25-50s_cutoff10.mat');
for i=1:size(amask,1)
    clear id00;
    id00=inpolygon(YSIM(1,:,1)-360,XSIM(i,1,1)*ones(size(amask,2),1),raycover.data(:,1),...
            raycover.data(:,2));
    amask(i,id00)=1;
end
amask3d=nan(size(vplot_all));
for k=1:length(z)
    amask3d(:,:,k)=amask;
end
vplot=vplot_all.*amask3d;
%%
maparea.lon=[-158,-139]; % temporary 
maparea.lat=[57, 65];
myzlim=[30 120];
lonidx=find(x>=maparea.lon(1) & x<=maparea.lon(2));
latidx=find(y>=maparea.lat(1) & y<=maparea.lat(2));
depthidx=find(z>=myzlim(1) & z<=myzlim(2));
%
clear isov isocap_low;
zlimindexmin=min(depthidx); zlimindexmax=max(depthidx);
isovalue1=4.1;
zlimindexmax_slow=118;
isov=isosurface(x(lonidx),y(latidx),z(zlimindexmin:zlimindexmax_slow),...
    vplot(latidx,lonidx,zlimindexmin:zlimindexmax_slow),isovalue1);
isocap_low=isocaps(x(lonidx),y(latidx),z(zlimindexmin:zlimindexmax_slow),...
    vplot(latidx,lonidx,zlimindexmin:zlimindexmax_slow),isovalue1,'below');

isovalue=4.6;
isovUM=isosurface(x(lonidx),y(latidx),z(zlimindexmin:zlimindexmax),vplot(latidx,lonidx,zlimindexmin:zlimindexmax),isovalue);
isocap_slab=isocaps(x(lonidx),y(latidx),z(zlimindexmin:zlimindexmax),...
    vplot(latidx,lonidx,zlimindexmin:zlimindexmax),isovalue);
%%
clear isov_maxgrad;
isov_maxgrad.points=isov.vertices(isov.vertices(:,3) >=myzlim(1) & isov.vertices(:,3) <=myzlim(2),:);
isov_maxgrad.tag='v=4.2 km/s, 21 box smooth';
zgridisov_maxgrad.data=griddata(isov_maxgrad.points(:,1),isov_maxgrad.points(:,2),...
    isov_maxgrad.points(:,3),x,y);zgridisov_maxgrad.tag='max v grad at 4.2 km/s, 21 box smooth';
%zgridisov_maxgrad.data(zgridisov_maxgrad.data <= (myzlim(1) + 1))=nan;
fidout4p2=fopen('isosurface4.2points.txt','w');
for i=1:size(isov_maxgrad.points,1)
   fprintf(fidout4p2,'%g  %g  %g\n',isov_maxgrad.points(i,1),isov_maxgrad.points(i,2),...
    isov_maxgrad.points(i,3)); 
end
fclose(fidout4p2);
save('isosurface4.2points.mat','isov_maxgrad');
%%
clear slabdata slabgrid;
slabdata=load('SlabE125_ready.dat');
slablon=min(slabdata(:,1)):0.1:max(slabdata(:,1));
slablat=min(slabdata(:,2)):0.1:max(slabdata(:,2));
[slabX,slabY]=meshgrid(slablon,slablat);
slabgrid=griddata(slabdata(:,1),slabdata(:,2),slabdata(:,3),...
    slablon,(slablat)');
%% plot 4.1 km/s isosurface.
bgcolor='w'; %'w' for print; 'k' for screen play
figure('position',[1400 400 1280 720],'color',bgcolor);
surfacealpha=1;
p=patch(isov,'FaceColor',[1 0.75 0],...
   'EdgeColor','none','FaceAlpha',1);
isonormals(x,y,z,...
    vplot,p);
patch(isocap_low,'FaceColor','interp','EdgeColor','none','FaceAlpha',1)

view(3); axis tight

hold on;
myzlimUM=myzlim;%[0 150];

pUM=patch(isovUM,'FaceColor',[0 0.25 .6],...
   'EdgeColor','none','FaceAlpha',surfacealpha);

isonormals(x(lonidx),y(latidx),z(zlimindexmin:zlimindexmax),...
    vplot(latidx,lonidx,zlimindexmin:zlimindexmax),pUM);
patch(isocap_slab,'FaceColor','interp','EdgeColor','none','FaceAlpha',surfacealpha)
colormap(jetwr);
caxis([3.7 4.9]);

view(-31,25); %axis tight
camlight right
camlight left
lightangle(125,65);
lightangle(90,65); 
lighting gouraud
set(gca,'ZDir','reverse');
hold on;

% plot slab surface.
hss=surface(slabX,slabY,slabgrid,'Facecolor',[0.5 0.5 0.5],'Edgecolor',[0.5 0.5 0.5],...
    'FaceAlpha',0.8,'linewidth',.5,'EdgeAlpha',1);
if strcmp(bgcolor,'k')
    for sb=1:length(state)
        plot3(state(sb).polygon(:,1), state(sb).polygon(:,2),myzlimUM(1)*ones(length(state(sb).polygon(:,1)),1),...
            'color',[.9 .9 .9],'LineWidth',2);
    end
else
    for sb=1:length(state)
        plot3(state(sb).polygon(:,1), state(sb).polygon(:,2),myzlimUM(1)*ones(length(state(sb).polygon(:,1)),1),...
            'color',[.2 .2 .2],'LineWidth',2);
    end
end

plot3(AKvolcanoes(:,1),AKvolcanoes(:,2),myzlimUM(1)*ones(length(AKvolcanoes(:,2)),1),...
    '^','linewidth',1,'markersize',10,'markeredgecolor',[.9 .9 .9],'markerfacecolor',[1 0 1]);

axis([maparea.lon(1) maparea.lon(2) maparea.lat(1) maparea.lat(2) myzlimUM(1) myzlimUM(2)]);

hold off

box on;
ax = gca;
ax.BoxStyle = 'full';
% grid on;
daspect([1 cosd(mean(maparea.lat)) 12]);
%
hcbar=colorbar('eastoutside');
set(hcbar,'TickDirection','out','Ticks',3.7:.2:4.9);

hcbar.Label.String='V_S (km/s)';

if strcmp(bgcolor,'k')
    xlabel('Longitude','fontsize',16,'color','w');
    ylabel('Latitude','fontsize',16,'color','w');
    zlabel('Depth (km)','fontsize',16,'color','w');
    set(gca,'Fontsize',16,'ZTick',myzlimUM(1):30:myzlimUM(2),'ZTickLabel',myzlimUM(1):30:myzlimUM(2),...
        'YTick',maparea.lat(1):2:maparea.lat(2),'XTick',round(maparea.lon(1):3:round(maparea.lon(2)))); 
    ax.XColor='w';
    ax.YColor='w';
    ax.ZColor='w';
    hcbar.Color='w';
    hcbar.Label.Color='w';
    set(gca,'Color','k')
else
    xlabel('Longitude','fontsize',16);
    ylabel('Latitude','fontsize',16);
    zlabel('Depth (km)','fontsize',16);
    set(gca,'Fontsize',16,'ZTick',myzlimUM(1):30:myzlimUM(2),'ZTickLabel',myzlimUM(1):30:myzlimUM(2),...
        'YTick',maparea.lat(1):2:maparea.lat(2),'XTick',round(maparea.lon(1):3:round(maparea.lon(2))));
%zlim([40 100]);
end
%% making movie.
savevideo=1;
if savevideo
    aviid = VideoWriter([velocitytag,'_isosurface_',...
        num2str(isovalue1),'_and_',num2str(isovalue),'_black_withcolorbar.mp4'],'MPEG-4');
    open(aviid);
end
view(-31,25);

pause(0.5)
for i=1:10
    if savevideo
        F = getframe(gcf);
        writeVideo(aviid,F);
    end
end
for el=25:.5:41
    view(-31,el);
    pause(.08);
    if savevideo
        F = getframe(gcf);
        writeVideo(aviid,F);
    end
end
for az=-31:-.5:-59
    view(az,41);
    camzoom(1.005);
    pause(.08);
    if savevideo
        F = getframe(gcf);
        writeVideo(aviid,F);
    end
end
view(az,43);
pause(1);
for i=1:25
    if savevideo
        F = getframe(gcf);
        writeVideo(aviid,F);
    end
end

for az=-59:.5:-9
    el=el+.25;
    view(az,el);
    pause(.08);
    if savevideo
        F = getframe(gcf);
        writeVideo(aviid,F);
    end
end

for az=-9:.5:14
%     el=el+.5;
    view(az,el);
    pause(.08);
    if savevideo
        F = getframe(gcf);
        writeVideo(aviid,F);
    end
end
pause(1);
for i=1:25
    if savevideo
        F = getframe(gcf);
        writeVideo(aviid,F);
    end
end
for cz=1:20
    camzoom(1.019);
    pause(.08);
    if savevideo
        F = getframe(gcf);
        writeVideo(aviid,F);
    end
end
pause(1);
for i=1:25
    if savevideo
        F = getframe(gcf);
        writeVideo(aviid,F);
    end
end
for az=14:1:85
%     el=el+.5;
    view(az,el);
    pause(.08);
    if savevideo
        F = getframe(gcf);
        writeVideo(aviid,F);
    end
end
pause(1);
for i=1:25
    if savevideo
        F = getframe(gcf);
        writeVideo(aviid,F);
    end
end
for cz=1:20
    camzoom(1.012);
    pause(.08);
    if savevideo
        F = getframe(gcf);
        writeVideo(aviid,F);
    end
end
pause(1);
for i=1:25
    if savevideo
        F = getframe(gcf);
        writeVideo(aviid,F);
    end
end
%
for az=85:1:120
    el=el+.2;
    view(az,el);
    pause(.08);
    if savevideo
        F = getframe(gcf);
        writeVideo(aviid,F);
    end
end
%
pause(1);
for i=1:25
    if savevideo
        F = getframe(gcf);
        writeVideo(aviid,F);
    end
end
for cz=1:20
    camzoom(1/1.016);
    pause(.08);
    if savevideo
        F = getframe(gcf);
        writeVideo(aviid,F);
    end
end
%
for i=1:15
    if savevideo
        F = getframe(gcf);
        writeVideo(aviid,F);
    end
end
% pause;
for az=120:1:160
    el=el-.2;
    view(az,el);
    pause(.08);
    if savevideo
        F = getframe(gcf);
        writeVideo(aviid,F);
    end
end
pause(1);
for i=1:25
    if savevideo
        F = getframe(gcf);
        writeVideo(aviid,F);
    end
end
%
for az=160:1:180
    el=el+.3;
    view(az,el);
    pause(.08);
    if savevideo
        F = getframe(gcf);
        writeVideo(aviid,F);
    end
end
% pause
for az=-180:1:-130
    el=el-.4;
    view(az,el);
    pause(.08);
    if savevideo
        F = getframe(gcf);
        writeVideo(aviid,F);
    end
end
for i=1:20
    if savevideo
        F = getframe(gcf);
        writeVideo(aviid,F);
    end
end
for az=-130:1:-60
    el=el-.4;
    view(az,el);
    pause(.08);
    if savevideo
        F = getframe(gcf);
        writeVideo(aviid,F);
    end
end
pause(1);
for i=1:25
    if savevideo
        F = getframe(gcf);
        writeVideo(aviid,F);
    end
end
%
for az=-60:.35:-25
    el=el+.15;
    view(az,el);
    camzoom(1/1.004);
    pause(.08);
    if savevideo
        F = getframe(gcf);
        writeVideo(aviid,F);
    end
end
for i=1:20
    if savevideo
        F = getframe(gcf);
        writeVideo(aviid,F);
    end
end
if savevideo;close(aviid);end
%%
aviid = VideoWriter([ite_nm,'_',velocitytag,'_isosurface.avi']);
open(aviid);
azistart=-31; aziend=-179.5;
elestart=25;eleend=12;

for view_ele=elestart:-.2:eleend
    view(azistart,view_ele);
    F = getframe(gcf);
    writeVideo(aviid,F);
end

for view_azi=azistart:-.5:aziend
    view(view_azi,eleend);
    F = getframe(gcf);
    writeVideo(aviid,F);
end
azistart=179.5; aziend=-31;
for view_azi=azistart:-.5:aziend
    view(view_azi,eleend);
    F = getframe(gcf);
    writeVideo(aviid,F);
end

for view_ele=eleend:.2:elestart
    view(aziend,view_ele);
    F = getframe(gcf);
    writeVideo(aviid,F);
end
close(aviid);

%% plot topography
clear topo
topo=load('etopo1_bedrock.xyz');
zgridtopo.data=griddata(topo(:,1),topo(:,2),topo(:,3),x,y);zgridtopo.tag='Topo';
%% gravity
% clear grav zgridgrav
% grav=load('WGM2012_Bouguer_ponc_2min.xyz');
% zgridgrav.data=griddata(grav(:,1),grav(:,2),grav(:,3),x,y);zgridgrav.tag='Gravity';

gravdatafile='DNAG.nc';

gravlon=nc_varget(gravdatafile,'longitude') - 360;
gravlat=nc_varget(gravdatafile,'latitude');
gravdata=nc_varget(gravdatafile,'gravity');
%% seismicity
quakes=load('NEIC_NewEngland1973_ExtractedColumns_lonlat.txt');
%% heat flow
clear heatflow zgridhf;
heatflow=load('Global2010_extractedcolumns_clean.txt');
%data2=data(~isnan(data(:,1)),1);
% data(isnan(99999))=nan;
xx=-76:0.25:-66;
yy=38:0.25:48;

zgridhf.data=griddata(heatflow(:,1),heatflow(:,2),heatflow(:,4),xx,yy');zgridhf.tag='Heat flow';

%% anisotropy
clear datas3 xx yy anis3grid;
datas3=load('LongEtALSKSEastNA2015_table_s3.txt');
xx=-76:0.7:-67;
yy=40:0.7:47;

zgridanis.data=griddata(datas3(:,2),datas3(:,1),datas3(:,4),xx,yy');zgridanis.tag='Anisotropy';
anis3azigridx=griddata(datas3(:,2),datas3(:,1),sin(datas3(:,3)*pi/180),xx,yy');
anis3azigridy=griddata(datas3(:,2),datas3(:,1),cos(datas3(:,3)*pi/180),xx,yy');
%%
figure('Position',[400 400 400 300]);
[XS,YS]=meshgrid(x,y);
maparea.lon=[-76,-68];
maparea.lat=[40, 46];
%%%%%for topography
ZS=zgridtopo.data./1000;
hht=surface(XS,YS,ZS,zgridtopo.data./1000,...
    'EdgeColor','none',...
    'CDataMapping','scaled');
% htop=image(XS(1,:),YS(:,1),zgridtopo.data./1000,...
%     'CDataMapping','scaled');
set(gca,'YDir','normal');
% ztag='Elevation (km)';
cmin=-0.5;cmax=1;
% zmin=-0.5; zmax=1.5;
zmin=-.5;zmax=1;
hold on;

%%%%%% for gravity
% ZS=0.02*zgridgrav.data;
% ZS(amask==0)=nan;
% hht=surface(XS,YS,ZS,zgridgrav.data,...
%     'EdgeColor','none',...
%     'CDataMapping','scaled');
% hgrav=image(XS(1,:),YS(:,1),zgridgrav.data,...
%     'CDataMapping','scaled');
% hgrav=image(gravlon,gravlat,gravdata,...
%     'CDataMapping','scaled');
% % hgrav.AlphaData=amask;
% set(gca,'YDir','normal');
% % %ztag='Buoguer gravity (mGal)';
% cmin=-70;cmax=30;
% zmin=-.1;zmax=.1;
% colormap('jet')
% colormap(flip(colormap('hsv')));

%%%%%%% earthquake epicenters
%scatter(quakes(:,1),quakes(:,2),20,'filled','k');

%%%%%% for moho mismatch
% mismatchcut=mismatch;
% %mismatchcut(mismatchcut<5)=nan;
% % clear ZS;
% % ZS=0.0*mismatchcut;
% % clear XS0 YS0;
% % [XS0,YS0]=meshgrid(XS(1,:),YS(:,1));
% % hht=surface(XS0,YS0,ZS,mismatchcut,...
% %     'EdgeColor','none',...
% %     'CDataMapping','scaled');
% hms=image(XS(1,:),YS(:,1),mismatchcut,...
%     'CDataMapping','scaled');
% hms.AlphaData=amask;
% set(gca,'YDir','normal');
% %ztag='Moho mismatch (km)';
% cmin=-2;cmax=12;
% zmin=-.1;zmax=.2;
% colormap(flip(colormap('parula')));

%%%%%% for heat flow
% ZS0=0.0025*zgridhf.data;
% [XS0,YS0]=meshgrid(xx,yy);
% % ZS(amask==0)=nan;
% % hht=surface(XS0,YS0,ZS0,zgridhf.data,...
% %     'EdgeColor','none',...
% %     'CDataMapping','scaled');
% clear idx
% idx=find(heatflow(:,4)>0 & heatflow(:,4)<200); % temporary selection for the new england area.
% scatter(heatflow(idx,1),heatflow(idx,2),1.5*heatflow(idx,4),heatflow(idx,4),'filled');
% %ztag='Buoguer gravity (mGal)';
% cmin=20;cmax=90;
% zmin=0;zmax=.25;
% colormap('jet');
%colormap(flip(colormap('jet')));

%%%%% for anisotropy
% ZS0=0.1*zgridanis.data;
% [XS0,YS0]=meshgrid(xx,yy);
% % ZS(amask==0)=nan;
% hanis=surface(XS0,YS0,ZS0,zgridanis.data,...
%     'EdgeColor','none',...
%     'CDataMapping','scaled');
% hanis=image(xx,yy,zgridanis.data,...
%     'CDataMapping','scaled');
% amask2=ones(size(zgridanis.data));
% amask2(isnan(zgridanis.data))=0;
% for i=1:size(amask2,1)
%     clear id00;
%     id00=inpolygon(xx,yy(i)*ones(length(yy),1),landarea.entire_landarea.data(:,1),...
%             landarea.entire_landarea.data(:,2));
%     amask2(i,id00)=1;
% end
% hanis.AlphaData=amask2;
% set(gca,'YDir','normal');
% %ztag='Buoguer gravity (mGal)';
% cmin=.9;cmax=1.6;
% zmin=0;zmax=.25;
%colormap('jet');
%colormap(flip(colormap('parula')));
% clear anis3azigridz;
% anis3azigridz=max(max(ZS0))*ones(size(anis3azigridx));

% set(gca,'CLim',[cmin cmax]);
demcmap([cmin cmax]);

%grid on;
daspect([1 cosd(mean(maparea.lat)) 5]);

hold on;
% for sb=1:length(state)
%     plot3(state(sb).polygon(:,1), state(sb).polygon(:,2),...
%         max(max(ZS0))*ones(length(state(sb).polygon(:,1)),1),'color',[.95 .95 .95],'LineWidth',1);
% end
for sb=1:length(state)
    plot(state(sb).polygon(:,1), state(sb).polygon(:,2),...
        'color',[.95 .95 .95],'LineWidth',.5);
end

% for k=1:1%length(bedrock.boundaries) %1:4,7 is specially selected to include the Adirondacks
%     plot3(bedrock.boundaries{k}.data(:,1), bedrock.boundaries{k}.data(:,2),...
%     max(max(ZS0))*ones(length(bedrock.boundaries{k}.data(:,1)),1),'k-.','LineWidth',1.5); 
% end

% for anisotropy only
% q=quiver3(xx,yy,anis3azigridz,zgridanis.data.*anis3azigridx,zgridanis.data.*anis3azigridy,zeros(size(zgridanis.data)),1.5);
% q.ShowArrowHead='off';
% q.Color='k';
% q.LineWidth=2;

% plot(bedrock.boundaries{1}.data(:,1), bedrock.boundaries{1}.data(:,2),...
%     'k:','LineWidth',3);
% plot(bedrock.boundaries{2}.data(:,1), bedrock.boundaries{2}.data(:,2),...
%     'k-','LineWidth',3);


hold off;

%
% xlabel('Longitude (deg)','fontsize',14);
% ylabel('Latitude (deg)','fontsize',14);
%zlabel(ztag,'fontsize',14);
set(gca,'Fontsize',18,'ZTick','','ZTickLabel','','XTickLabel','','YTickLabel','');
% set(gca,'Fontsize',18,'ZTick',[0 1.5],'ZTickLabel',[0 1.5]);
%zlim([40 100]);
lightangle(90,-30);
view(-31,25); axis tight
%old view: -34, 11
camlight 
lighting gouraud
set(gca,'ZDir','normal');
ylim([maparea.lat(1) maparea.lat(2)]);
xlim([maparea.lon(1) maparea.lon(2)]);
zlim([zmin zmax]);
% box on;

%% plot map view
%
figure('Position',[200 400 400 400]);
[XS,YS]=meshgrid(x,y);
maparea.lon=[-76,-68];
maparea.lat=[40, 46];

% subplot(1,2,1);
%%%%%for topography
htop=image(XS(1,:),YS(:,1),zgridtopo.data./1000,...
    'CDataMapping','scaled');
set(gca,'YDir','normal');
% ztag='Elevation (km)';
cmin=-0.5;cmax=1;
hold on;

% set(gca,'CLim',[cmin cmax]);
demcmap([cmin cmax]);

%grid on;
daspect([1 cosd(mean(maparea.lat)) 1]);

hold on;
for sb=1:length(state)
    plot(state(sb).polygon(:,1), state(sb).polygon(:,2),...
        'color',[.5 .5 .5],'LineWidth',1.5);
end

stations=load('stations_info_withdata_lonlat.txt');
plot(stations(:,1)-360,stations(:,2),...
    'k^','markersize',8,'linewidth',1);

plot(bedrock.boundaries{5}.data(:,1), bedrock.boundaries{5}.data(:,2),...
    'w:','LineWidth',3);
plot(bedrock.boundaries{2}.data(:,1), bedrock.boundaries{2}.data(:,2),...
    'w-','LineWidth',3);

hold off;
hcbar=colorbar('southoutside');
hcbar.Label.String='Topography/bathymetry (km)';
set(hcbar,'TickDirection','out');
set(gca,'TickDir','out','fontsize',14);

ylim([maparea.lat(1) maparea.lat(2)]);
xlim([maparea.lon(1) maparea.lon(2)]);
box on;

% get anisotropy
dataanis=load('LongEtALSKSEastNA2015_table_s3.txt');
%
figure('Position',[700 400 400 400]);
% ax2=subplot(1,2,2);
%%%%%for Moho
clear amask;
landarea=load('entire_landarea.mat');
%clear masktest
amask=zeros(length(squeeze(YS(:,1))),length(squeeze(XS(1,:))));
for i=1:size(amask,1)
    %for j=1:size(masktest,2)
        clear id00;
        id00=inpolygon(XS(1,:),YS(i,1)*ones(size(amask,2),1),landarea.entire_landarea.data(:,1),...
                landarea.entire_landarea.data(:,2));
        amask(i,id00)=1;
           % masktest(j,i)=1;
        
%         end
    %end
end

hmoho=image(XS(1,:),YS(:,1),zgridmoho.data,...
    'CDataMapping','scaled','AlphaData',amask);
set(gca,'YDir','normal');
% ztag='Elevation (km)';
cmin=25;cmax=50;
% zmin=-0.5; zmax=1.5;
hold on;
colormap(flip(colormap('jet')));
set(gca,'CLim',[cmin cmax]);

%grid on;
daspect([1 cosd(mean(maparea.lat)) 1]);

for sb=1:length(state)
    plot(state(sb).polygon(:,1), state(sb).polygon(:,2),...
        'color',[.5 .5 .5],'LineWidth',1.5);
end

plot(bedrock.boundaries{5}.data(:,1), bedrock.boundaries{5}.data(:,2),...
    'w:','LineWidth',3);
plot(bedrock.boundaries{2}.data(:,1), bedrock.boundaries{2}.data(:,2),...
    'w-','LineWidth',3);

%plot anisotropy vectors
hq=quiver(dataanis(:,2),dataanis(:,1),dataanis(:,4).*sin(dataanis(:,3)*pi/180),...
    dataanis(:,4).*cos(dataanis(:,3)*pi/180),.5);
hq.ShowArrowHead='off';
hq.Color='k';
hq.LineWidth=2;

hq2=quiver(maparea.lon(2)-1.3,maparea.lat(1)+.4,sin(90*pi/180),...
    0,.5);
hq2.ShowArrowHead='off';
hq2.Color='k';
hq2.LineWidth=3;

text(maparea.lon(2) - 1.3, maparea.lat(1)+.6, '1 s','FontSize',12);

%absolute plate motion from HS3-NUVEL1A (Gripp and Gordon, 2002, GJI)
%APM angular velocity of north american is: -74.705 (N),13.400 (E). Get its
%normal vector, which is the APM direction.
hq3=quiver(maparea.lon(2)-.5,maparea.lat(1)+1.7,-cos(atan(13.4/-74.705)),sin(atan(13.4/-74.705)),1.5);
hq3.Color=[.4 .4 .4];
hq3.ShowArrowHead='on';
hq3.LineWidth=6;


hold off;
hcbar2=colorbar('southoutside');
hcbar2.Label.String='Moho depth (km)';
set(hcbar2,'TickDirection','out');
set(gca,'TickDir','out','fontsize',14);

ylim([maparea.lat(1) maparea.lat(2)]);
xlim([maparea.lon(1) maparea.lon(2)]);
box on;

%% heat flow
%%

clear heatflow;
heatflow=load('Global2010_extractedcolumns_clean.txt');

%%
maparea.lon=[-76,-68];
maparea.lat=[40, 46];
figure('Position',[700 400 400 400]);
% ax2=subplot(1,2,2);

clear idx
idx=find(heatflow(:,4) >0 & heatflow(:,4) <=150 & heatflow(:,1)>=maparea.lon(1) & heatflow(:,1)<=maparea.lon(2) &...
    heatflow(:,2)>=maparea.lat(1) & heatflow(:,2)<=maparea.lat(2)); % temporary selection for the new england area.
scatter(heatflow(idx,1),heatflow(idx,2),1.5*heatflow(idx,4),heatflow(idx,4),'filled');
%ztag='Buoguer gravity (mGal)';
cmin=20;cmax=100;
zmin=0;zmax=.25;
hcbar2=colormap('jet');
% zmin=-0.5; zmax=1.5;
hold on;
set(gca,'CLim',[cmin cmax]);

%grid on;
daspect([1 cosd(mean(maparea.lat)) 1]);

for sb=1:length(state)
    plot(state(sb).polygon(:,1), state(sb).polygon(:,2),...
        'color',[.5 .5 .5],'LineWidth',1.5);
end

plot(bedrock.boundaries{5}.data(:,1), bedrock.boundaries{5}.data(:,2),...
    'k:','LineWidth',3);
plot(bedrock.boundaries{2}.data(:,1), bedrock.boundaries{2}.data(:,2),...
    'k-','LineWidth',3);

hold off;
hcbar2=colorbar('southoutside');
hcbar2.Label.String='Heat flow (mW/m^2)';
set(hcbar2,'TickDirection','out');
set(gca,'TickDir','out','fontsize',14);

ylim([maparea.lat(1) maparea.lat(2)]);
xlim([maparea.lon(1) maparea.lon(2)]);
box on;
